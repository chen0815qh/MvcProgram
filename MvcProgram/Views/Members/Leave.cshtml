@{
    //ViewBag.Title = "Leave";
}
@using MODEL;@*导入命名空间*@
@model Members
@section head{
    <style type="text/css">
        .pageNumber {
            color: red;
            font-weight: bolder;
        }

        .pageBar {
            padding: 10px 0px;
        }

            .pageBar a {
                margin: 0px 4px;
            }

        .portrait:hover {
            opacity: 0.7;
        }

        .replyDiv {
            display: none;
            width: 80%;
        }

        .reply {
            margin-top: 5px;
        }

            .reply p {
                margin: 0px;
                line-height: 26px;
            }
    </style>
    <script src="~/Content/Js/jquery-tmpl-master/jquery.tmpl.js"></script>
    <script src="~/Content/Js/UEditor/ueditor.config.js"></script>
    <script src="~/Content/Js/UEditor/ueditor.all.js"></script>
    <script src="~/Content/Js/UEditor/lang/zh-cn/zh-cn.js"></script>
    <script type="text/javascript">

        $(function () {
            var msgUE = UE.getEditor("editor");//对应到留言的那个ueditor
            var ue;
            var isNullOrEmpty = /^\s*$/;
            $("div.replyContainer").on("mouseenter", "div.reply", function () {
                $(this).find("a[delreply]").show();
            }).on("mouseleave", "div.reply", function () {
                $(this).find("a[delreply]").hide();
            });
            $("a[replyid]").click(function () {
                $("div.replyDiv").hide();
                $(this).parent().parent().find("div.replyDiv").show();
                var id = $(this).parent().parent().find("div.replyDiv").find("div.editor").attr("id");
                ue = UE.getEditor(id);
            });
            //删除回复。
            $("div.replyContainer").on("click", "a[delreply]", function () {
                var msgId = $(this).attr("delreply");
                var replyDiv = $(this).parents("div.reply:eq(0)");
                $.post("/Members/DelReply/" + msgId, null, function (data, status) {
                    if (data.Status == "ok") {
                        replyDiv.fadeOut("slow", function () {
                            replyDiv.remove();
                        });
                    }
                    else {
                        alert(data.Msg);
                    }
                });
            });
            //留言
            $("#leaveBtn").click(function () {

                //if (isNullOrEmpty.test(msgUE.getContentTxt())) {
                //    alert("请输入留言内容!");
                //    return false;
                //}
                return true;
            });
            //回复
            $("input[type=submit][replyid]").click(function () {

                var msgId = $(this).attr("replyid");
                var memberid = $(this).attr("memberid");

                var content = ue.getContent();

                var replyDiv = $(this).parents("div.replyDiv:eq(0)");
                var replyList = replyDiv.prev("#replyList");
                jQuery.post("/Members/Reply", { msgId: msgId, memberId: memberid, content: content }, function (data, status) {
                    //注意：由于Reply返回的就是json，这里不需要使用$.parseJSON进行转换，也不要指定 dataType:"json"选项。
                    //data就是返回回来的json数据。
                    replyList.append($("#replyTmpl").tmpl(data, {
                        decode: function (str) {
                            return decodeURIComponent(str);
                        },
                        parseDate: function (dateStr) {
                            var date = new Date(parseInt(dateStr.toString().replace("/Date(", "").replace(")/", "").toString(), 10));
                            var year, month, date1, hour, minute, second;
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            date1 = date.getDate();
                            hour = date.getHours();
                            minute = date.getMinutes();
                            second = date.getSeconds();

                            return year + "/" + month + "/" + date1 + " " + hour + ":" + minute + ":" + second;
                        }
                    }));
                    replyDiv.hide();
                });
                return false;
            });
            $("input[cancelbtn]").click(function () {
                $(this).parents("div.replyDiv").hide();
            });

        });
    </script>

    <script type="text/x-jquery-tmpl" id="replyTmpl">
        <div class="reply">
            <div style="display:inline-block;vertical-align:top;">
                <img src="/Content/Images/${Member.Portrait}" style="border-radius:8px;vertical-align:top;" width="35" height="35" />
            </div>
            <div style="display:inline-block;margin-left:10px;">
                <div>
                    ${Member.MemberAccount}<br /> {{html Msg.MsgContent}}
                </div>
                <div>
                    ${$item.parseDate(Msg.AddTime)}
                    <a href="javascript:void(0)" style="margin:0px 10px;display:none;" delreply="${Msg.MsgId}">删除</a>
                </div>
            </div>
        </div>
    </script>
}
<div>
    <img src="~/Content/Images/@Model.Portrait" width="120" height="120" />
</div>
<h4>给 <span style="color:Green;font-size:20px;">@(string.IsNullOrEmpty(Model.NickName) ? Model.MemberAccount : Model.NickName)</span> 留言：</h4>
@{
    Html.BeginForm("Leave", "Members", FormMethod.Post);
}
<div id="editor" style="margin:10px 0px;">

</div>
<div style="text-align:right;">
    <input type="submit" value="留言" class="btn btn-default" id="leaveBtn" />
</div>
@{
    Html.EndForm();
}
@*把alert脚本放到页面底端执行，这样就不会再浏览器alert的瞬间，背景都是灰色的。*@
<script type="text/javascript">
    @if (ViewData["MsgTip"] != null)
    {
    <text>
    alert("@ViewData["MsgTip"]");
    </text>
    }
</script>
@{
    Members currentMember = Session["MemberInfo"] as Members;//当前登录的会员。
    List<ReplyList> replyList = ViewBag.ReplyList as List<ReplyList>;
    List<ReplyList> leaveList = new List<ReplyList>();
    if (replyList != null && replyList.Count > 0)
    {
        leaveList = replyList.Where(m => m.ReplyId == 0).ToList();//找到所有的留言记录。
    }
    Members currentMemberInfo = Session["MemberInfo"] as Members;
    int rowCount = 0;
    if (ViewBag.LeaveCount != null)
    {
        rowCount = ViewBag.LeaveCount;
    }
}
@*这里读取出给对应用户留的言，以及对方的回复等。*@
<div class="pageBar">
    @*这里得到分页条*@
    @{
        int floorCount = 0;
    }
    @if (ViewBag.LeaveCount != null)
    {
        int id = Convert.ToInt32(ViewContext.RouteData.Values["id"]);
        //这个ViewContext.RouteData.Values["id"]表示取出url中对应到Default路由中id那个占位符处的值，也就是表示我们现在正在给谁留言。
        int pageIndex = Convert.ToInt32(Request.QueryString["pageIndex"]);

        if (pageIndex <= 0)
        {
            pageIndex = 1;
        }
        rowCount = ViewBag.LeaveCount;//表示我们给某个会员留了多少条言。
        int pageSize = ViewBag.PageSize;
        int pageCount = rowCount % pageSize == 0 ? rowCount / pageSize : rowCount / pageSize + 1;
        int nextPageIndex = pageIndex >= pageCount ? pageCount : pageIndex + 1;
        int previousPageIndex = pageIndex <= 1 ? 1 : pageIndex - 1;

        floorCount = rowCount - (pageIndex - 1) * pageSize;


        <span>共 @rowCount 条记录</span><span>当前第 <span class="pageNumber">@pageIndex</span> 页 共 @pageCount 页</span>

        <a href="@("/Members/Leave/" + id + "?pageIndex=1")">首页</a>
        @*生成前半段部分*@
        @Html.ActionLink("上一页", "Leave", "Members", new { id = id, pageIndex = previousPageIndex }, null)

        //C#代码块。
        {
            for (int i = 4; i > 0; i--)
            {
                if (pageIndex - i > 0)
                {
                    <a href="@Url.RouteUrl("Default", new { controller = "Members", action = "Leave", id = id, pageIndex = pageIndex - i })">@(pageIndex - i)</a>
                }
            }
        }

        <a href="@Url.RouteUrl("Default", new { id = id, pageIndex = pageIndex, controller = "Members", action = "Leave" })" style="color:Red;font-size:14px;font-weight:bolder;">@(pageIndex)</a> @*当前页*@

        {
            for (int i = 1; i <= 4; i++)
            {
                if (pageIndex + i <= pageCount)
                {
                    //注意，new{pageIndex=pageIndex+1}左侧的pageIndex是这个匿名类对象的属性，而右边的pageIndex是上面声明的局部变量。
                    //意思是：将上面的声明的局部变量pageIndex的值+1并赋值给匿名类对象的pageIndex属性。
                    <a href="@Url.RouteUrl("Default", new { controller = "Members", action = "Leave", id = id, pageIndex = pageIndex + 1 })">@(pageIndex + i)</a>
                }
            }
        }
        @Html.ActionLink("下一页", "Leave", "Members", new { id = id, pageIndex = nextPageIndex }, null)
        <a href="/Members/Leave/@id?pageIndex=@pageCount">末页</a>
    }
</div>
<div style="border-bottom:1px solid #6c852d;margin:20px 0px;"></div>


@foreach (ReplyList l in leaveList)
{

    <div style="border-bottom:1px solid #dddddd;margin:10px 0px;padding:10px 0px;" class="replyContainer">
        <table style="width:100%;">
            <tr>
                <td style="width:80px;vertical-align:top;" rowspan="3">
                    <a href="@Url.RouteUrl("Default", new { controller = "Members", action = "Leave", id = l.AuthorId })"><img class="portrait" style="border-radius:8px;" src="~/Content/Images/@l.Portrait" width="50" height="50" /></a>
                </td>
                <td style="vertical-align:top;">
                    <div style="color:Gray;float:left;"><span style="font-weight:bolder;color:Red;">@(l.MemberId == currentMemberInfo.MemberId ? "我" : l.MemberAccount)</span> 第 @floorCount 楼 </div>
                    <div style="float:right;"></div>
                    <div style="clear:both;height:0px;"></div>
                </td>
            </tr>
            <tr>
                <td style="padding-top:10px;">@(Html.Raw(HttpUtility.HtmlDecode(l.MsgContent)))</td>
            </tr>
            <tr>
                <td style="color: Gray; padding-top: 40px;">
                    <div style="margin-bottom: 20px; border-bottom: 1px solid #EFEFEF; padding-bottom: 10px; ">
                        @l.AddTime
                        <a href="javascript:void(0)" replyid="@l.MsgId" style="margin:0px 10px;"> 回复 </a>

                    </div>
                    @*下面显示的是针对于某一条留言的所有的回复记录*@
                    <div id="replyList">
                        @{
    List<ReplyList> replys = replyList.Where(m => m.ReplyId == l.MsgId || (m.ReplyId == l.MsgId && l.AuthorId == currentMemberInfo.MemberId)).ToList().OrderBy(ml => ml.AddTime).ToList();
    foreach (ReplyList r in replys)
    {
        <div class="reply">
            <div style="display:inline-block;vertical-align:top;">
                <img src="@Url.Content("~/Content/Images/" + r.Portrait)" style="border-radius:8px;vertical-align:top;" width="35" height="35" />
            </div>
            <div style="display:inline-block;margin-left:10px;">
                <div>
                    @(r.MemberId == currentMemberInfo.MemberId ? "我" : r.MemberAccount) @(new MvcHtmlString(HttpUtility.HtmlDecode(r.MsgContent)))
                </div>
                <div>
                    @r.AddTime
                    @*只能删除我们自己回复的内容*@
                    @if (currentMember.MemberId == r.AuthorId)
                    {
                        <a href="javascript:void(0)" style="margin:0px 10px;display:none;" delreply="@r.MsgId">删除</a>
                    }
                </div>
            </div>
        </div>
    }
                        }
                    </div>
                    @*下面这边是用于显示编写回复内容的html在线编辑器。*@
                    <div class="replyDiv">
                        <div class="editor" id="editor@(rowCount)"></div>
                        <div style="margin:10px 0px;">
                            <input type="submit" value="回复" replyid="@l.MsgId" memberid="@ViewContext.RouteData.Values["id"]" class="btn btn-default" />
                            <input type="submit" value="取消" cancelbtn class="btn btn-default" />
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    floorCount--;
}



